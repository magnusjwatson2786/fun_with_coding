import processing.core.*; 
import processing.data.*; 
import processing.event.*; 
import processing.opengl.*; 

import g4p_controls.*; 

import java.util.HashMap; 
import java.util.ArrayList; 
import java.io.File; 
import java.io.BufferedReader; 
import java.io.PrintWriter; 
import java.io.InputStream; 
import java.io.OutputStream; 
import java.io.IOException; 

public class V4 extends PApplet {


int s=20;
int p,q,r;
int sh=0;

public void setup(){
  
  createGUI();
  customGUI();
  background(255);
}

public void mousePressed(){
  
}
public void mouseDragged(){
  fill(p,q,r);
  noStroke();
  if(sh==1){
    rect(mouseX,mouseY,s,s);}
  else
    {ellipse(mouseX,mouseY,s,s);}
}

public void draw(){
  
  
}

public void customGUI(){

}
/* =========================================================
 * ====                   WARNING                        ===
 * =========================================================
 * The code in this tab has been generated from the GUI form
 * designer and care should be taken when editing this file.
 * Only add/edit code inside the event handlers i.e. only
 * use lines between the matching comment tags. e.g.

 void myBtnEvents(GButton button) { //_CODE_:button1:12356:
     // It is safe to enter your event code here  
 } //_CODE_:button1:12356:
 
 * Do not rename this tab!
 * =========================================================
 */

synchronized public void win_draw1(PApplet appc, GWinData data) { //_CODE_:window1:566615:
  appc.background(230);
  appc.fill(p,q,r);
  appc.rect(40,65,60,60);
} //_CODE_:window1:566615:

synchronized public void win_mouse(PApplet appc, GWinData data, MouseEvent mevent) { //_CODE_:window1:689672:
  println("window1 - mouse event " + millis());
} //_CODE_:window1:689672:

synchronized public void win_ky(PApplet appc, GWinData data, KeyEvent kevent) { //_CODE_:window1:768884:
  println("window1 - key event " + millis());
} //_CODE_:window1:689672:

synchronized public void win_pre(PApplet appc, GWinData data) { //_CODE_:window1:208476:
  println("window1 - pre method called " + millis());
} //_CODE_:window1:208476:

synchronized public void win_post(PApplet appc, GWinData data) { //_CODE_:window1:804227:
  println("window1 - post method called " + millis());
} //_CODE_:window1:804227:

public void win_close(GWindow window) { //_CODE_:window1:677077:
  println("window1 - window closed at " + millis());
} //_CODE_:window1:677077:

public void slider1_change1(GSlider source, GEvent event) { //_CODE_:slider1:526607:
  p=source.getValueI();
} //_CODE_:slider1:526607:

public void slider2_change1(GSlider source, GEvent event) { //_CODE_:slider2:865820:
  q=source.getValueI();
} //_CODE_:slider2:865820:

public void slider3_change1(GSlider source, GEvent event) { //_CODE_:slider3:766361:
  r=source.getValueI();
} //_CODE_:slider3:766361:

public void slider4_change1(GSlider source, GEvent event) { //_CODE_:slider4:331865:
  s=source.getValueI();
} //_CODE_:slider4:331865:

public void button1_click1(GButton source, GEvent event) { //_CODE_:button1:236871:
  sh=0;
} //_CODE_:button1:236871:

public void button2_click1(GButton source, GEvent event) { //_CODE_:button2:550479:
  sh=1;
} //_CODE_:button2:550479:

public void button3_click1(GButton source, GEvent event) { //_CODE_:button3:650944:
  p=255;q=255;r=255;
} //_CODE_:button3:650944:

public void button4_click1(GButton source, GEvent event) { //_CODE_:button4:466884:
  saveFrame("img-#####");
} //_CODE_:button4:466884:



// Create all the GUI controls. 
// autogenerated do not edit
public void createGUI(){
  G4P.messagesEnabled(false);
  G4P.setGlobalColorScheme(GCScheme.BLUE_SCHEME);
  G4P.setMouseOverEnabled(false);
  surface.setTitle("MyPaint V4 - Canvas");
  window1 = GWindow.getWindow(this, "MyPaint V4 - Controls", 100, 100, 640, 375, JAVA2D);
  window1.noLoop();
  window1.setActionOnClose(G4P.EXIT_APP);
  window1.addDrawHandler(this, "win_draw1");
  window1.addMouseHandler(this, "win_mouse");
  window1.addKeyHandler(this, "win_ky");
  window1.addPreHandler(this, "win_pre");
  window1.addPostHandler(this, "win_post");
  window1.addOnCloseHandler(this, "win_close");
  label1 = new GLabel(window1, 125, 68, 80, 20);
  label1.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label1.setText("R:");
  label1.setTextBold();
  label1.setOpaque(false);
  label2 = new GLabel(window1, 125, 88, 80, 20);
  label2.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label2.setText("G:");
  label2.setTextBold();
  label2.setOpaque(false);
  label3 = new GLabel(window1, 126, 107, 80, 20);
  label3.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label3.setText("B:");
  label3.setTextBold();
  label3.setOpaque(false);
  slider1 = new GSlider(window1, 174, 60, 268, 40, 10.0f);
  slider1.setShowValue(true);
  slider1.setLimits(0, 0, 255);
  slider1.setNbrTicks(51);
  slider1.setNumberFormat(G4P.INTEGER, 0);
  slider1.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  slider1.setOpaque(false);
  slider1.addEventHandler(this, "slider1_change1");
  slider2 = new GSlider(window1, 174, 79, 269, 40, 10.0f);
  slider2.setShowValue(true);
  slider2.setLimits(0, 0, 255);
  slider2.setNbrTicks(51);
  slider2.setNumberFormat(G4P.INTEGER, 0);
  slider2.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  slider2.setOpaque(false);
  slider2.addEventHandler(this, "slider2_change1");
  slider3 = new GSlider(window1, 174, 98, 269, 40, 10.0f);
  slider3.setShowValue(true);
  slider3.setLimits(0, 0, 255);
  slider3.setNbrTicks(51);
  slider3.setNumberFormat(G4P.INTEGER, 0);
  slider3.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  slider3.setOpaque(false);
  slider3.addEventHandler(this, "slider3_change1");
  label4 = new GLabel(window1, 76, 34, 72, 24);
  label4.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label4.setText("Color");
  label4.setTextBold();
  label4.setLocalColorScheme(GCScheme.RED_SCHEME);
  label4.setOpaque(false);
  label5 = new GLabel(window1, 75, 168, 80, 20);
  label5.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label5.setText("Brush Size");
  label5.setTextBold();
  label5.setLocalColorScheme(GCScheme.RED_SCHEME);
  label5.setOpaque(false);
  slider4 = new GSlider(window1, 19, 201, 210, 40, 10.0f);
  slider4.setShowValue(true);
  slider4.setLimits(20.0f, 5.0f, 100.0f);
  slider4.setNbrTicks(20);
  slider4.setStickToTicks(true);
  slider4.setNumberFormat(G4P.DECIMAL, 1);
  slider4.setOpaque(false);
  slider4.addEventHandler(this, "slider4_change1");
  label6 = new GLabel(window1, 366, 166, 80, 20);
  label6.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label6.setText("Brush Shape");
  label6.setTextBold();
  label6.setLocalColorScheme(GCScheme.RED_SCHEME);
  label6.setOpaque(false);
  button1 = new GButton(window1, 324, 205, 65, 25);
  button1.setText("Elliptical");
  button1.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  button1.addEventHandler(this, "button1_click1");
  button2 = new GButton(window1, 420, 204, 82, 26);
  button2.setText("Rectangular");
  button2.setLocalColorScheme(GCScheme.PURPLE_SCHEME);
  button2.addEventHandler(this, "button2_click1");
  button3 = new GButton(window1, 514, 80, 71, 24);
  button3.setText("Eraser");
  button3.setTextBold();
  button3.addEventHandler(this, "button3_click1");
  button4 = new GButton(window1, 19, 310, 67, 23);
  button4.setText("Save");
  button4.setTextBold();
  button4.setLocalColorScheme(GCScheme.CYAN_SCHEME);
  button4.addEventHandler(this, "button4_click1");
  label7 = new GLabel(window1, 234, 3, 165, 25);
  label7.setTextAlign(GAlign.CENTER, GAlign.MIDDLE);
  label7.setText("MyPaint Controls");
  label7.setTextBold();
  label7.setTextItalic();
  label7.setOpaque(false);
  window1.loop();
}

// Variable declarations 
// autogenerated do not edit
GWindow window1;
GLabel label1; 
GLabel label2; 
GLabel label3; 
GSlider slider1; 
GSlider slider2; 
GSlider slider3; 
GLabel label4; 
GLabel label5; 
GSlider slider4; 
GLabel label6; 
GButton button1; 
GButton button2; 
GButton button3; 
GButton button4; 
GLabel label7; 
  public void settings() {  size(1024, 720, JAVA2D); }
  static public void main(String[] passedArgs) {
    String[] appletArgs = new String[] { "V4" };
    if (passedArgs != null) {
      PApplet.main(concat(appletArgs, passedArgs));
    } else {
      PApplet.main(appletArgs);
    }
  }
}
